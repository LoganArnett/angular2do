{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/17","xhr_mock.js","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/164","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/31","@traceur/generated/TemplateParser/15"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/mock/xhr_mock.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/mock/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {XHR} from 'angular2/src/core/compiler/xhr/xhr';\nimport {List, ListWrapper, Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent, normalizeBlank, BaseException} from 'angular2/src/facade/lang';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nexport class XHRMock extends XHR {\n  _expectations: List<_Expectation>;\n  _definitions: Map;\n  _requests: List<Promise>;\n\n  constructor() {\n    super();\n    this._expectations = [];\n    this._definitions = MapWrapper.create();\n    this._requests = [];\n  }\n\n  get(url: string): Promise<string> {\n    var request = new _PendingRequest(url);\n    ListWrapper.push(this._requests, request);\n    return request.getPromise();\n  }\n\n  expect(url: string, response: string) {\n    var expectation = new _Expectation(url, response);\n    ListWrapper.push(this._expectations, expectation);\n  }\n\n  when(url: string, response: string) {\n    MapWrapper.set(this._definitions, url, response);\n  }\n\n  flush() {\n    if (this._requests.length === 0) {\n      throw new BaseException('No pending requests to flush');\n    }\n\n    do {\n      var request = ListWrapper.removeAt(this._requests, 0);\n      this._processRequest(request);\n    } while (this._requests.length > 0);\n\n    this.verifyNoOustandingExpectations();\n  }\n\n  verifyNoOustandingExpectations() {\n    if (this._expectations.length === 0) return;\n\n    var urls = [];\n    for (var i = 0; i < this._expectations.length; i++) {\n      var expectation = this._expectations[i];\n      ListWrapper.push(urls, expectation.url);\n    }\n\n    throw new BaseException(`Unsatisfied requests: ${ListWrapper.join(urls, ', ')}`);\n  }\n\n  _processRequest(request: _PendingRequest) {\n    var url = request.url;\n\n    if (this._expectations.length > 0) {\n      var expectation = this._expectations[0];\n      if (expectation.url === url) {\n        ListWrapper.remove(this._expectations, expectation);\n        request.complete(expectation.response);\n        return;\n      }\n    }\n\n    if (MapWrapper.contains(this._definitions, url)) {\n      var response = MapWrapper.get(this._definitions, url);\n      request.complete(normalizeBlank(response));\n      return;\n    }\n\n    throw new BaseException(`Unexpected request ${url}`);\n  }\n}\n\nclass _PendingRequest {\n  url: string;\n  completer;\n\n  constructor(url) {\n    this.url = url;\n    this.completer = PromiseWrapper.completer();\n  }\n\n  complete(response: string) {\n    if (isBlank(response)) {\n      this.completer.reject(`Failed to load ${this.url}`);\n    } else {\n      this.completer.complete(response);\n    }\n  }\n\n  getPromise(): Promise<string> {\n    return this.completer.promise;\n  }\n}\n\nclass _Expectation {\n  url: string;\n  response: string;\n  constructor(url: string, response: string) {\n    this.url = url;\n    this.response = response;\n  }\n}\n","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.genericType($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()"]}