{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/17","exceptions.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/18","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,oGAAuC,UAAS,SAAQ;;ACAvE,AAAI,IAAA,CAAA,YAAW,6CAAoB,CAAC;;;;;ACApC,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG,CAAG;ACAf,kBAAoB,KAAG,YAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;6CGFY,CAAA,SAAQ,AAAC,4CCAjC,SAAS,QAAO;AACN,AAAI,UAAA,yCCCP,SAAM,uCAAqC,CAGpC,KAAI,AAAY,CAAG,CAAA,MAAK,AAAI,CAAG;ACL7C,eAAK,cAAc,ODKC,YAAU,SEL9B,CAAA,MAAK,KAAK,KDA4B,CAAA;ADMlC,AGNJ,wBAAc,iBAAiB,AAAC,wCAAkB,KAAK,MAAmB,CHM/D;AACP,aAAG,QAAQ,EAAI,EAAA,cAAc,EAAC,CAAA,KAAI,mBAAmB,EAAC,uCAAqC,KAC3F,mBAAmB,EAAC,CAAA,MAAK,cAAc,EAAC,sBAAqB,EAAC,CAAA,MAAK,aAAa,EAAC,IAAE,CAAA,CAAC;QACtF,ADRgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,0CCS5C,QAAO,CAAP,UAAS,AAAD;AIXV,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CJYd,IAAG,QAAQ,CIZqB,CFA3C,CAAA,MAAK,KAAK,QEAqD,CAAA;UJa7D,MDVgE,SAAO,CAAC,CAAC;MACnE,AAAC,CCFmD,KAAI,CDErC,EDJ2C;AOAtE,WAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,kBLIN,WAAU,IEL9B,MAAK,KAAK,OGCuC;QAAC,CAAC,CAAC,CAAC;2BPD7B,CAAA,SAAQ,AAAC,0BCAjC,SAAS,QAAO;AACN,AAAI,UAAA,uBCeP,SAAM,qBAAmB,CAKlB,KAAI,AAAY,CAAG,CAAA,iBAAgB,AAAI,CAAG;ACrBxD,eAAK,cAAc,ODqBC,YAAU,oBErB9B,CAAA,MAAK,KAAK,KDA4B,CAAA;ADsBlC,AGtBJ,wBAAc,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CHsB/D;AACP,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,aAAG,SAAS,EAAI,CAAA,KAAI,mBAAmB,CAAC;AACxC,aAAG,QAAQ,IAAO,IAAG,kBAAkB,EAAC,QAAO,EAAC,CAAA,IAAG,SAAS,EAAC,IAAE,CAAA,CAAC;QAClE,ADzBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,wBC0B5C,QAAO,CAAP,UAAS,AAAD;AI5BV,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CJ6Bd,IAAG,QAAQ,CI7BqB,CFA3C,CAAA,MAAK,KAAK,QEAqD,CAAA;UJ8B7D,MD3BgE,SAAO,CAAC,CAAC;MACnE,AAAC,CCYiC,KAAI,CDZnB,EDJ2C;AOAtE,WAAK,eAAe,AAAC,oCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,kBLoBN,WAAU,IErB9B,MAAK,KAAK,OGCuC;QAAC,CAAC,CAAC,CAAC;IVCtB;EAC3B,CAAA;AFDI,CAAC,CAAC;AO6BV","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/exceptions.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/change_detection/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {ProtoRecord} from './proto_change_detector';\n\nexport class ExpressionChangedAfterItHasBeenChecked extends Error {\n  message:string;\n\n  constructor(proto:ProtoRecord, change:any) {\n    super();\n    this.message = `Expression '${proto.expressionAsString}' has changed after it was checked. ` +\n    `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`;\n  }\n\n  toString():string {\n    return this.message;\n  }\n}\n\nexport class ChangeDetectionError extends Error {\n  message:string;\n  originalException:any;\n  location:string;\n\n  constructor(proto:ProtoRecord, originalException:any) {\n    super();\n    this.originalException = originalException;\n    this.location = proto.expressionAsString;\n    this.message = `${this.originalException} in [${this.location}]`;\n  }\n\n  toString():string {\n    return this.message;\n  }\n}","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}