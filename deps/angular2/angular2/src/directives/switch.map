{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/15","switch.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/312","@traceur/generated/TemplateParser/313","@traceur/generated/TemplateParser/315","@traceur/generated/TemplateParser/316","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/directives/switch.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/directives/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","import {Decorator, Template} from 'angular2/src/core/annotations/annotations';\nimport {ViewPort} from 'angular2/src/core/compiler/viewport';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {DOM} from 'angular2/src/facade/dom';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper, List, MapWrapper, Map} from 'angular2/src/facade/collection';\nimport {Parent} from 'angular2/src/core/annotations/visibility';\n\n/**\n * The `Switch` directive is used to conditionally swap DOM structure on your template based on a\n * scope expression.\n * Elements within `Switch` but without `SwitchWhen` or `SwitchDefault` directives will be\n * preserved at the location as specified in the template.\n *\n * `Switch` simply chooses nested elements and makes them visible based on which element matches\n * the value obtained from the evaluated expression. In other words, you define a container element\n * (where you place the directive), place an expression on the **`[switch]=\"...\"` attribute**),\n * define any inner elements inside of the directive and place a `[switch-when]` attribute per\n * element.\n * The when attribute is used to inform Switch which element to display when the expression is\n * evaluated. If a matching expression is not found via a when attribute then an element with the\n * default attribute is displayed.\n *\n * Example:\n *\n * ```\n * <ANY [switch]=\"expression\">\n *   <template [switch-when]=\"whenExpression1\">...</template>\n *   <template [switch-when]=\"whenExpression1\">...</template>\n *   <template [switch-default]>...</template>\n * </ANY>\n * ```\n */\n@Decorator({\n  selector: '[switch]',\n  bind: {\n    'switch': 'value'\n  }\n})\nexport class Switch {\n  _switchValue: any;\n  _useDefault: boolean;\n  _valueViewPorts: Map;\n  _activeViewPorts: List;\n\n  constructor() {\n    this._valueViewPorts = MapWrapper.create();\n    this._activeViewPorts = ListWrapper.create();\n    this._useDefault = false;\n  }\n\n  set value(value) {\n    // Remove the currently active viewports\n    this._removeAllActiveViewPorts();\n\n    // Add the viewports matching the value (with a fallback to default)\n    this._useDefault = false;\n    var viewPorts = MapWrapper.get(this._valueViewPorts, value);\n    if (isBlank(viewPorts)) {\n      this._useDefault = true;\n      viewPorts = MapWrapper.get(this._valueViewPorts, _whenDefault);\n    }\n    this._activateViewPorts(viewPorts);\n\n    this._switchValue = value;\n  }\n\n  _onWhenValueChanged(oldWhen, newWhen, viewPort: ViewPort) {\n    this._deregisterViewPort(oldWhen, viewPort);\n    this._registerViewPort(newWhen, viewPort);\n\n    if (oldWhen === this._switchValue) {\n      viewPort.remove();\n      ListWrapper.remove(this._activeViewPorts, viewPort);\n    } else if (newWhen === this._switchValue) {\n      if (this._useDefault) {\n        this._useDefault = false;\n        this._removeAllActiveViewPorts();\n      }\n      viewPort.create();\n      ListWrapper.push(this._activeViewPorts, viewPort);\n    }\n\n    // Switch to default when there is no more active viewports\n    if (this._activeViewPorts.length === 0 && !this._useDefault) {\n      this._useDefault = true;\n      this._activateViewPorts(MapWrapper.get(this._valueViewPorts, _whenDefault));\n    }\n  }\n\n  _removeAllActiveViewPorts() {\n    var activeViewPorts = this._activeViewPorts;\n    for (var i = 0; i < activeViewPorts.length; i++) {\n      activeViewPorts[i].remove();\n    }\n    this._activeViewPorts = ListWrapper.create();\n  }\n\n  _activateViewPorts(viewPorts) {\n    // TODO(vicb): assert(this._activeViewPorts.length === 0);\n    if (isPresent(viewPorts)) {\n      for (var i = 0; i < viewPorts.length; i++) {\n        viewPorts[i].create();\n      }\n      this._activeViewPorts = viewPorts;\n    }\n  }\n\n  _registerViewPort(value, viewPort: ViewPort) {\n    var viewPorts = MapWrapper.get(this._valueViewPorts, value);\n    if (isBlank(viewPorts)) {\n      viewPorts = ListWrapper.create();\n      MapWrapper.set(this._valueViewPorts, value, viewPorts);\n    }\n    ListWrapper.push(viewPorts, viewPort);\n  }\n\n  _deregisterViewPort(value, viewPort: ViewPort) {\n    // `_whenDefault` is used a marker for non-registered whens\n    if (value == _whenDefault) return;\n    var viewPorts = MapWrapper.get(this._valueViewPorts, value);\n    if (viewPorts.length == 1) {\n      MapWrapper.delete(this._valueViewPorts, value);\n    } else {\n      ListWrapper.remove(viewPorts, viewPort);\n    }\n  }\n}\n\n/**\n * Defines a case statement as an expression.\n *\n * If multiple `SwitchWhen` match the `Switch` value, all of them are displayed.\n *\n * Example:\n *\n * ```\n * // match against a context variable\n * <template [switch-when]=\"contextVariable\">...</template>\n *\n * // match against a constant string\n * <template [switch-when]=\"'stringValue'\">...</template>\n * ```\n */\n@Template({\n  selector: '[switch-when]',\n  bind: {\n    'switch-when' : 'when'\n  }\n})\nexport class SwitchWhen {\n  _value: any;\n  _switch: Switch;\n  _viewPort: ViewPort;\n\n  constructor(el: NgElement, viewPort: ViewPort, @Parent() sswitch: Switch) {\n    // `_whenDefault` is used as a marker for a not yet initialized value\n    this._value = _whenDefault;\n    this._switch = sswitch;\n    this._viewPort = viewPort;\n  }\n\n  set when(value) {\n    this._switch._onWhenValueChanged(this._value, value, this._viewPort);\n    this._value = value;\n  }\n}\n\n\n/**\n * Defines a default case statement.\n *\n * Default case statements are displayed when no `SwitchWhen` match the `switch` value.\n *\n * Example:\n *\n * ```\n * <template [switch-default]>...</template>\n * ```\n */\n@Template({\n  selector: '[switch-default]'\n})\nexport class SwitchDefault {\n  constructor(viewPort: ViewPort, @Parent() sswitch: Switch) {\n    sswitch._registerViewPort(_whenDefault, viewPort);\n  }\n}\n\nvar _whenDefault = new Object();\n","assert.argumentTypes($__placeholder__0)","assert.type.any","assert.type.any","assert.type.any","assert.type.any","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}