{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/17","proto_element_injector_builder.js","@traceur/generated/TemplateParser/16","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/proto_element_injector_builder.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/pipeline/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","import {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {Key} from 'angular2/di';\nimport {ProtoElementInjector, ComponentKeyMetaData, DirectiveBinding} from '../element_injector';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {DirectiveMetadata} from '../directive_metadata';\n\n/**\n * Creates the ProtoElementInjectors.\n *\n * Fills:\n * - CompileElement#inheritedProtoElementInjector\n * - CompileElement#distanceToParentInjector\n *\n * Reads:\n * - (in parent) CompileElement#inheritedProtoElementInjector\n * - (in parent) CompileElement#distanceToParentInjector\n * - CompileElement#isViewRoot\n * - CompileElement#inheritedProtoView\n * - CompileElement#decoratorDirectives\n * - CompileElement#componentDirective\n * - CompileElement#templateDirective\n */\nexport class ProtoElementInjectorBuilder extends CompileStep {\n  // public so that we can overwrite it in tests\n  internalCreateProtoElementInjector(parent, index, directives, firstBindingIsComponent, distance) {\n    return new ProtoElementInjector(parent, index, directives, firstBindingIsComponent, distance);\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var distanceToParentInjector = this._getDistanceToParentInjector(parent, current);\n    var parentProtoElementInjector = this._getParentProtoElementInjector(parent, current);\n    var injectorBindings = ListWrapper.map(current.getAllDirectives(), this._createBinding);\n    // TODO: add lightDomServices as well,\n    // but after the directives as we rely on that order\n    // in the element_binder_builder.\n\n    // Create a protoElementInjector for any element that either has bindings *or* has one\n    // or more var- defined. Elements with a var- defined need a their own element injector\n    // so that, when hydrating, $implicit can be set to the element.\n    if (injectorBindings.length > 0 || isPresent(current.variableBindings)) {\n      var protoView = current.inheritedProtoView;\n      var hasComponent = isPresent(current.componentDirective);\n\n      current.inheritedProtoElementInjector = this.internalCreateProtoElementInjector(\n        parentProtoElementInjector, protoView.elementBinders.length, injectorBindings,\n        hasComponent, distanceToParentInjector\n      );\n      current.distanceToParentInjector = 0;\n\n      // Template directives are treated differently than other element with var- definitions.\n      if (isPresent(current.variableBindings) && !isPresent(current.templateDirective)) {\n        current.inheritedProtoElementInjector.exportComponent = hasComponent;\n        current.inheritedProtoElementInjector.exportElement = !hasComponent;\n\n        // experiment\n        var exportImplicitName = MapWrapper.get(current.variableBindings, '\\$implicit');\n        if (isPresent(exportImplicitName)) {\n          current.inheritedProtoElementInjector.exportImplicitName = exportImplicitName;\n        }\n      }\n\n    } else {\n      current.inheritedProtoElementInjector = parentProtoElementInjector;\n      current.distanceToParentInjector = distanceToParentInjector;\n    }\n  }\n\n  _getDistanceToParentInjector(parent, current) {\n    return isPresent(parent) ? parent.distanceToParentInjector + 1 : 0;\n  }\n\n  _getParentProtoElementInjector(parent, current) {\n    if (isPresent(parent) && !current.isViewRoot) {\n      return parent.inheritedProtoElementInjector;\n    }\n    return null;\n  }\n\n  _createBinding(d:DirectiveMetadata): DirectiveBinding {\n    return DirectiveBinding.createFromType(d.type, d.annotation);\n  }\n}\n","$traceurRuntime.superConstructor(\n          $__placeholder__0).apply(this, arguments)","assert.argumentTypes($__placeholder__0)","return assert.returnType(($__placeholder__0), $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}