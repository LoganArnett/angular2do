{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","view.js","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/164","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/923","@traceur/generated/TemplateParser/925","@traceur/generated/TemplateParser/926","@traceur/generated/TemplateParser/23","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/886","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/931","@traceur/generated/TemplateParser/31"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/view.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/src/core/compiler/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","import {DOM, Element, Node, Text, DocumentFragment, TemplateElement} from 'angular2/src/facade/dom';\nimport {ListWrapper, MapWrapper, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, ContextWithVariableBindings, ChangeDispatcher, ProtoChangeDetector, ChangeDetector, ChangeRecord}\n  from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects} from './element_injector';\nimport {BindingPropagationConfig} from './binding_propagation_config';\nimport {ElementBinder} from './element_binder';\nimport {DirectiveMetadata} from './directive_metadata';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {FIELD, IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {NgElement} from 'angular2/src/core/dom/element';\nimport {ViewPort} from './viewport';\nimport {Content} from './shadow_dom_emulation/content_tag';\nimport {LightDom, DestinationLightDom} from './shadow_dom_emulation/light_dom';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\n\nconst NG_BINDING_CLASS = 'ng-binding';\nconst NG_BINDING_CLASS_SELECTOR = '.ng-binding';\n// TODO(tbosch): Cannot use `const` because of Dart.\nvar NO_FORMATTERS = MapWrapper.create();\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n */\n@IMPLEMENTS(ChangeDispatcher)\nexport class View {\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  bindElements:List<Element>;\n  textNodes:List<Text>;\n  changeDetector:ChangeDetector;\n  /// When the view is part of render tree, the DocumentFragment is empty, which is why we need\n  /// to keep track of the nodes.\n  nodes:List<Node>;\n  componentChildViews: List<View>;\n  viewPorts: List<ViewPort>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: ProtoView;\n  context: any;\n  contextWithLocals:ContextWithVariableBindings;\n\n  constructor(proto:ProtoView, nodes:List<Node>, protoChangeDetector:ProtoChangeDetector, protoContextLocals:Map) {\n    this.proto = proto;\n    this.nodes = nodes;\n    this.changeDetector = protoChangeDetector.instantiate(this, NO_FORMATTERS);\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.textNodes = null;\n    this.bindElements = null;\n    this.componentChildViews = null;\n    this.viewPorts = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.contextWithLocals = (MapWrapper.size(protoContextLocals) > 0)\n      ? new ContextWithVariableBindings(null, MapWrapper.clone(protoContextLocals))\n      : null;\n  }\n\n  init(elementInjectors:List, rootElementInjectors:List, textNodes: List, bindElements:List, viewPorts:List, preBuiltObjects:List, componentChildViews:List) {\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.textNodes = textNodes;\n    this.bindElements = bindElements;\n    this.viewPorts = viewPorts;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.context.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _hydrateContext(newContext) {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.parent = newContext;\n      this.context = this.contextWithLocals;\n    } else {\n      this.context = newContext;\n    }\n    // TODO(tbosch): if we have a contextWithLocals we actually only need to\n    // set the contextWithLocals once. Would it be faster to always use a contextWithLocals\n    // even if we don't have locals and not update the recordRange here?\n    this.changeDetector.setContext(this.context);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.contextWithLocals)) {\n      this.contextWithLocals.clearValues();\n    }\n    this.context = null;\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewports are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object) {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n    this._hydrateContext(context);\n\n    // viewPorts\n    for (var i = 0; i < this.viewPorts.length; i++) {\n      this.viewPorts[i].hydrate(appInjector, hostElementInjector);\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var services = componentDirective.annotation.componentServices;\n        if (isPresent(services))\n          shadowDomAppInjector = appInjector.createChild(services);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.context.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.context.set(exportImplicitName, elementInjector.getNgElement().domElement);\n        }\n      }\n\n      if (isPresent(componentDirective)) {\n        this.componentChildViews[componentChildViewIndex++].hydrate(shadowDomAppInjector,\n          elementInjector, elementInjector.getComponent());\n      }\n    }\n\n    // this should be moved into DOM write queue\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      if (isPresent(componentDirective)) {\n        var lightDom = this.preBuiltObjects[i].lightDom;\n        if (isPresent(lightDom)) {\n          lightDom.redistribute();\n        }\n      }\n    }\n  }\n\n  dehydrate() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].dehydrate();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewPorts\n    if (isPresent(this.viewPorts)) {\n      for (var i = 0; i < this.viewPorts.length; i++) {\n        this.viewPorts[i].dehydrate();\n      }\n    }\n\n    this._dehydrateContext();\n  }\n\n  onRecordChange(directiveMemento, records:List) {\n    this._invokeMementos(records);\n    if (directiveMemento instanceof DirectiveMemento) {\n      this._notifyDirectiveAboutChanges(directiveMemento, records);\n    }\n  }\n\n  _invokeMementos(records:List) {\n    for(var i = 0; i < records.length; ++i) {\n      this._invokeMementoFor(records[i]);\n    }\n  }\n\n  _notifyDirectiveAboutChanges(directiveMemento, records:List) {\n    var dir = directiveMemento.directive(this.elementInjectors);\n    var binding = directiveMemento.directiveBinding(this.elementInjectors);\n\n    if (binding.callOnChange) {\n      dir.onChange(this._collectChanges(records));\n    }\n  }\n\n    // dispatch to element injector or text nodes based on context\n  _invokeMementoFor(record:ChangeRecord) {\n    var memento = record.bindingMemento;\n    if (memento instanceof DirectiveBindingMemento) {\n      var directiveMemento:DirectiveBindingMemento = memento;\n      directiveMemento.invoke(record, this.elementInjectors);\n\n    } else if (memento instanceof ElementBindingMemento) {\n      var elementMemento:ElementBindingMemento = memento;\n      elementMemento.invoke(record, this.bindElements);\n\n    } else {\n      // we know it refers to _textNodes.\n      var textNodeIndex:number = memento;\n      DOM.setText(this.textNodes[textNodeIndex], record.currentValue);\n    }\n  }\n\n  _collectChanges(records:List) {\n    var changes = StringMapWrapper.create();\n    for(var i = 0; i < records.length; ++i) {\n      var record = records[i];\n      var propertyUpdate = new PropertyUpdate(record.currentValue, record.previousValue);\n      StringMapWrapper.set(changes, record.bindingMemento._setterName, propertyUpdate);\n    }\n    return changes;\n  }\n}\n\nexport class ProtoView {\n  element:Element;\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoContextLocals:Map;\n  textNodesWithBindingCount:int;\n  elementsWithBindingCount:int;\n  instantiateInPlace:boolean;\n  rootBindingOffset:int;\n  isTemplateElement:boolean;\n  shadowDomStrategy: ShadowDomStrategy;\n  constructor(\n      template:Element,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy) {\n    this.element = template;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoContextLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.textNodesWithBindingCount = 0;\n    this.elementsWithBindingCount = 0;\n    this.instantiateInPlace = false;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS))\n      ? 1 : 0;\n    this.isTemplateElement = this.element instanceof TemplateElement;\n    this.shadowDomStrategy = shadowDomStrategy;\n  }\n\n  // TODO(rado): hostElementInjector should be moved to hydrate phase.\n  instantiate(hostElementInjector: ElementInjector):View {\n    var rootElementClone = this.instantiateInPlace ? this.element : DOM.clone(this.element);\n    var elementsWithBindingsDynamic;\n    if (this.isTemplateElement) {\n      elementsWithBindingsDynamic = DOM.querySelectorAll(rootElementClone.content, NG_BINDING_CLASS_SELECTOR);\n    } else {\n      elementsWithBindingsDynamic= DOM.getElementsByClassName(rootElementClone, NG_BINDING_CLASS);\n    }\n\n    var elementsWithBindings = ListWrapper.createFixedSize(elementsWithBindingsDynamic.length);\n    for (var i = 0; i < elementsWithBindingsDynamic.length; ++i) {\n      elementsWithBindings[i] = elementsWithBindingsDynamic[i];\n    }\n\n    var viewNodes;\n    if (this.isTemplateElement) {\n      var childNode = DOM.firstChild(rootElementClone.content);\n      viewNodes = []; // TODO(perf): Should be fixed size, since we could pre-compute in in ProtoView\n      // Note: An explicit loop is the fastest way to convert a DOM array into a JS array!\n      while(childNode != null) {\n        ListWrapper.push(viewNodes, childNode);\n        childNode = DOM.nextSibling(childNode);\n      }\n    } else {\n      viewNodes = [rootElementClone];\n    }\n\n    var view = new View(this, viewNodes, this.protoChangeDetector, this.protoContextLocals);\n    var binders = this.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var textNodes = [];\n    var elementsWithPropertyBindings = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewPorts = [];\n    var componentChildViews = [];\n\n    for (var i = 0; i < binders.length; i++) {\n      var binder = binders[i];\n      var element;\n      if (i === 0 && this.rootBindingOffset === 1) {\n        element = rootElementClone;\n      } else {\n        element = elementsWithBindings[i - this.rootBindingOffset];\n      }\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector, null, binder.events);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null, hostElementInjector, binder.events);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[i] = elementInjector;\n\n      if (binder.hasElementPropertyBindings) {\n        ListWrapper.push(elementsWithPropertyBindings, element);\n      }\n\n      // textNodes\n      var textNodeIndices = binder.textNodeIndices;\n      if (isPresent(textNodeIndices)) {\n        var childNode = DOM.firstChild(DOM.templateAwareRoot(element));\n        for (var j = 0, k = 0; j < textNodeIndices.length; j++) {\n          for(var index = textNodeIndices[j]; k < index; k++) {\n            childNode = DOM.nextSibling(childNode);\n          }\n          ListWrapper.push(textNodes, childNode);\n        }\n      }\n\n      // componentChildViews\n      var lightDom = null;\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.componentDirective)) {\n        var strategy = this.shadowDomStrategy;\n        var childView = binder.nestedProtoView.instantiate(elementInjector);\n        view.changeDetector.addChild(childView.changeDetector);\n\n        lightDom = strategy.constructLightDom(view, childView, element);\n        strategy.attachTemplate(element, childView);\n\n        bindingPropagationConfig = new BindingPropagationConfig(view.changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewPorts\n      var viewPort = null;\n      if (isPresent(binder.templateDirective)) {\n        var destLightDom = this._parentElementLightDom(protoElementInjector, preBuiltObjects);\n        viewPort = new ViewPort(view, element, binder.nestedProtoView, elementInjector, destLightDom);\n        ListWrapper.push(viewPorts, viewPort);\n      }\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[i] = new PreBuiltObjects(view, new NgElement(element), viewPort,\n          lightDom, bindingPropagationConfig);\n      }\n\n      // events\n      if (isPresent(binder.events)) {\n        MapWrapper.forEach(binder.events, (expr, eventName) => {\n          if (isBlank(elementInjector) || !elementInjector.hasEventEmitter(eventName)) {\n            ProtoView._addNativeEventListener(element, eventName, expr, view);\n          }\n        });\n      }\n    }\n\n    view.init(elementInjectors, rootElementInjectors, textNodes, elementsWithPropertyBindings,\n      viewPorts, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n  static _addNativeEventListener(element: Element, eventName: string, expr: AST, view: View) {\n    var locals = MapWrapper.create();\n    var innerCallback = ProtoView.buildInnerCallback(expr, view, locals);\n    DOM.on(element, eventName, (event) => {\n      if (event.target === element) {\n        innerCallback(event);\n      }\n    });\n  }\n\n  static buildInnerCallback(expr:AST, view:View, locals: Map) {\n    return (event) => {\n      // Most of the time the event will be fired only when the view is\n      // in the live document.  However, in a rare circumstance the\n      // view might get dehydrated, in between the event queuing up and\n      // firing.\n      if (view.hydrated()) {\n        MapWrapper.set(locals, `$event`, event);\n        var context = new ContextWithVariableBindings(view.context, locals);\n        expr.eval(context);\n      }\n    }\n  }\n\n  _parentElementLightDom(protoElementInjector:ProtoElementInjector, preBuiltObjects:List):LightDom {\n    var p = protoElementInjector.parent;\n    return isPresent(p) ? preBuiltObjects[p.index].lightDom : null;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoContextLocals, templateName, null);\n  }\n\n  bindElement(protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveMetadata = null, templateDirective:DirectiveMetadata = null):ElementBinder {\n    var elBinder = new ElementBinder(protoElementInjector, componentDirective, templateDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(indexInParent:int, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.textNodeIndices)) {\n      elBinder.textNodeIndices = ListWrapper.create();\n    }\n    ListWrapper.push(elBinder.textNodeIndices, indexInParent);\n    var memento = this.textNodesWithBindingCount++;\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string, setter:SetterFn) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (!elBinder.hasElementPropertyBindings) {\n      elBinder.hasElementPropertyBindings = true;\n      this.elementsWithBindingCount++;\n    }\n    var memento = new ElementBindingMemento(this.elementsWithBindingCount-1, setterName, setter);\n    this.protoChangeDetector.addAst(expression, memento);\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement\n   */\n  bindEvent(eventName:string, expression:AST) {\n    var elBinder = this.elementBinders[this.elementBinders.length-1];\n    if (isBlank(elBinder.events)) {\n      elBinder.events = MapWrapper.create();\n    }\n    MapWrapper.set(elBinder.events, eventName, expression);\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn,\n    isContentWatch: boolean) {\n\n    var bindingMemento = new DirectiveBindingMemento(\n      this.elementBinders.length-1,\n      directiveIndex,\n      setterName,\n      setter\n    );\n    var directiveMemento = DirectiveMemento.get(bindingMemento);\n    this.protoChangeDetector.addAst(expression, bindingMemento, directiveMemento, isContentWatch);\n  }\n\n  // Create a rootView as if the compiler encountered <rootcmp></rootcmp>,\n  // and the component template is already compiled into protoView.\n  // Used for bootstrapping.\n  static createRootProtoView(protoView: ProtoView,\n      insertionElement,\n      rootComponentAnnotatedType: DirectiveMetadata,\n      protoChangeDetector:ProtoChangeDetector,\n      shadowDomStrategy: ShadowDomStrategy\n  ): ProtoView {\n\n    DOM.addClass(insertionElement, 'ng-binding');\n    var rootProtoView = new ProtoView(insertionElement, protoChangeDetector, shadowDomStrategy);\n    rootProtoView.instantiateInPlace = true;\n    var binder = rootProtoView.bindElement(\n        new ProtoElementInjector(null, 0, [rootComponentAnnotatedType.type], true));\n    binder.componentDirective = rootComponentAnnotatedType;\n    binder.nestedProtoView = protoView;\n    return rootProtoView;\n  }\n}\n\nexport class ElementBindingMemento {\n  _elementIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(elementIndex:int, setterName:string, setter:SetterFn) {\n    this._elementIndex = elementIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, bindElements:List<Element>) {\n    var element:Element = bindElements[this._elementIndex];\n    this._setter(element, record.currentValue);\n  }\n}\n\nexport class DirectiveBindingMemento {\n  _elementInjectorIndex:int;\n  _directiveIndex:int;\n  _setterName:string;\n  _setter:SetterFn;\n  constructor(\n      elementInjectorIndex:number,\n      directiveIndex:number,\n      setterName:string,\n      setter:SetterFn) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n    this._setterName = setterName;\n    this._setter = setter;\n  }\n\n  invoke(record:ChangeRecord, elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    var directive = elementInjector.getDirectiveAtIndex(this._directiveIndex);\n    this._setter(directive, record.currentValue);\n  }\n}\n\nvar _directiveMementos = MapWrapper.create();\n\nclass DirectiveMemento {\n  _elementInjectorIndex:number;\n  _directiveIndex:number;\n\n  constructor(elementInjectorIndex:number, directiveIndex:number) {\n    this._elementInjectorIndex = elementInjectorIndex;\n    this._directiveIndex = directiveIndex;\n  }\n\n  static get(memento:DirectiveBindingMemento) {\n    var elementInjectorIndex = memento._elementInjectorIndex;\n    var directiveIndex = memento._directiveIndex;\n    var id = elementInjectorIndex * 100 + directiveIndex;\n\n    if (!MapWrapper.contains(_directiveMementos, id)) {\n      MapWrapper.set(_directiveMementos, id, new DirectiveMemento(elementInjectorIndex, directiveIndex));\n    }\n    return MapWrapper.get(_directiveMementos, id);\n  }\n\n  directive(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveAtIndex(this._directiveIndex);\n  }\n\n  directiveBinding(elementInjectors:List<ElementInjector>) {\n    var elementInjector:ElementInjector = elementInjectors[this._elementInjectorIndex];\n    return elementInjector.getDirectiveBindingAtIndex(this._directiveIndex);\n  }\n}\n\nclass PropertyUpdate {\n  currentValue;\n  previousValue;\n\n  constructor(currentValue, previousValue) {\n    this.currentValue = currentValue;\n    this.previousValue = previousValue;\n  }\n}\n","var $__placeholder__0 = $__export($__placeholder__1, $__placeholder__2);","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","assert.genericType($__placeholder__0)","assert.type.$__placeholder__0)","assert.type.any","assert.type.any","assert.type.any","assert.type($__placeholder__0, $__placeholder__1)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","void 0","return assert.returnType(($__placeholder__0), $__placeholder__1)","assert.type.any","$__placeholder__0 = $__placeholder__1"]}