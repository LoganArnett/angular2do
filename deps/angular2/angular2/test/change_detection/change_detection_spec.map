{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","change_detection_spec.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/350","@traceur/generated/TemplateParser/351","@traceur/generated/TemplateParser/352","@traceur/generated/TemplateParser/353","@traceur/generated/TemplateParser/354","@traceur/generated/TemplateParser/355","@traceur/generated/TemplateParser/167","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/31","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/17","@traceur/generated/TemplateParser/18"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/change_detection_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/change_detection/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach, IS_DARTIUM} from 'angular2/test_lib';\n\nimport {isPresent, isBlank, isJsObject, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {Parser} from 'angular2/src/change_detection/parser/parser';\nimport {Lexer} from 'angular2/src/change_detection/parser/lexer';\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {arrayChangesAsString, kvChangesAsString} from './util';\n\nimport {ChangeDispatcher, DynamicChangeDetector, ChangeDetectionError, ContextWithVariableBindings,\n  CHECK_ALWAYS, CHECK_ONCE, CHECKED, DETACHED} from 'angular2/change_detection';\n\n\nimport {JitProtoChangeDetector, DynamicProtoChangeDetector} from 'angular2/src/change_detection/proto_change_detector';\nimport {ChangeDetectionUtil} from 'angular2/src/change_detection/change_detection_util';\n\n\nexport function main() {\n  describe(\"change detection\", () => {\n    StringMapWrapper.forEach(\n      { \"dynamic\": () => new DynamicProtoChangeDetector(),\n        \"JIT\": () => new JitProtoChangeDetector()\n      }, (createProtoChangeDetector, name) => {\n\n        if (name == \"JIT\" && IS_DARTIUM) return;\n\n        function ast(exp:string, location:string = 'location') {\n          var parser = new Parser(new Lexer());\n          return parser.parseBinding(exp, location);\n        }\n\n        function createChangeDetector(memo:string, exp:string, context = null, formatters = null,\n                                             structural = false) {\n          var pcd = createProtoChangeDetector();\n          pcd.addAst(ast(exp), memo, memo, structural);\n\n          var dispatcher = new TestDispatcher();\n          var cd = pcd.instantiate(dispatcher, formatters);\n          cd.setContext(context);\n\n          return {\"changeDetector\" : cd, \"dispatcher\" : dispatcher};\n        }\n\n        function executeWatch(memo:string, exp:string, context = null, formatters = null,\n                              content = false) {\n          var res = createChangeDetector(memo, exp, context, formatters, content);\n          res[\"changeDetector\"].detectChanges();\n          return res[\"dispatcher\"].log;\n        }\n\n        describe(`${name} change detection`, () => {\n          it('should do simple watching', () => {\n            var person = new Person(\"misko\");\n            var c = createChangeDetector('name', 'name', person);\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual(['name=misko']);\n            dispatcher.clear();\n\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual([]);\n            dispatcher.clear();\n\n            person.name = \"Misko\";\n            cd.detectChanges();\n            expect(dispatcher.log).toEqual(['name=Misko']);\n          });\n\n          it('should report all changes on the first run including uninitialized values', () => {\n            expect(executeWatch('value', 'value', new Uninitialized())).toEqual(['value=null']);\n          });\n\n          it('should report all changes on the first run including null values', () => {\n            var td = new TestData(null);\n            expect(executeWatch('a', 'a', td)).toEqual(['a=null']);\n          });\n\n          it(\"should support literals\", () => {\n            expect(executeWatch('const', '10')).toEqual(['const=10']);\n            expect(executeWatch('const', '\"str\"')).toEqual(['const=str']);\n            expect(executeWatch('const', '\"a\\n\\nb\"')).toEqual(['const=a\\n\\nb']);\n          });\n\n          it('simple chained property access', () => {\n            var address = new Address('Grenoble');\n            var person = new Person('Victor', address);\n\n            expect(executeWatch('address.city', 'address.city', person))\n              .toEqual(['address.city=Grenoble']);\n          });\n\n          it(\"should support method calls\", () => {\n            var person = new Person('Victor');\n            expect(executeWatch('m', 'sayHi(\"Jim\")', person)).toEqual(['m=Hi, Jim']);\n          });\n\n          it(\"should support function calls\", () => {\n            var td = new TestData(() => (a) => a);\n            expect(executeWatch('value', 'a()(99)', td)).toEqual(['value=99']);\n          });\n\n          it(\"should support chained method calls\", () => {\n            var person = new Person('Victor');\n            var td = new TestData(person);\n            expect(executeWatch('m', 'a.sayHi(\"Jim\")', td)).toEqual(['m=Hi, Jim']);\n          });\n\n          it(\"should support literal array\", () => {\n            var c = createChangeDetector('array', '[1,2]');\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues).toEqual([[[1, 2]]]);\n\n            c = createChangeDetector('array', '[1,a]', new TestData(2));\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues).toEqual([[[1, 2]]]);\n          });\n\n          it(\"should support literal maps\", () => {\n            var c = createChangeDetector('map', '{z:1}');\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n\n            c = createChangeDetector('map', '{z:a}', new TestData(1));\n            c[\"changeDetector\"].detectChanges();\n            expect(c[\"dispatcher\"].loggedValues[0][0]['z']).toEqual(1);\n          });\n\n          it(\"should support binary operations\", () => {\n            expect(executeWatch('exp', '10 + 2')).toEqual(['exp=12']);\n            expect(executeWatch('exp', '10 - 2')).toEqual(['exp=8']);\n\n            expect(executeWatch('exp', '10 * 2')).toEqual(['exp=20']);\n            expect(executeWatch('exp', '10 / 2')).toEqual([`exp=${5.0}`]); //dart exp=5.0, js exp=5\n            expect(executeWatch('exp', '11 % 2')).toEqual(['exp=1']);\n\n            expect(executeWatch('exp', '1 == 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '1 != 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '1 < 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '2 > 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '1 <= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 <= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 <= 1')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', '2 >= 1')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '2 >= 2')).toEqual(['exp=true']);\n            expect(executeWatch('exp', '1 >= 2')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', 'true && true')).toEqual(['exp=true']);\n            expect(executeWatch('exp', 'true && false')).toEqual(['exp=false']);\n\n            expect(executeWatch('exp', 'true || false')).toEqual(['exp=true']);\n            expect(executeWatch('exp', 'false || false')).toEqual(['exp=false']);\n          });\n\n          it(\"should support negate\", () => {\n            expect(executeWatch('exp', '!true')).toEqual(['exp=false']);\n            expect(executeWatch('exp', '!!true')).toEqual(['exp=true']);\n          });\n\n          it(\"should support conditionals\", () => {\n            expect(executeWatch('m', '1 < 2 ? 1 : 2')).toEqual(['m=1']);\n            expect(executeWatch('m', '1 > 2 ? 1 : 2')).toEqual(['m=2']);\n          });\n\n          describe(\"keyed access\", () => {\n            it(\"should support accessing a list item\", () => {\n              expect(executeWatch('array[0]', '[\"foo\", \"bar\"][0]')).toEqual(['array[0]=foo']);\n            });\n\n            it(\"should support accessing a map item\", () => {\n              expect(executeWatch('map[foo]', '{\"foo\": \"bar\"}[\"foo\"]')).toEqual(['map[foo]=bar']);\n            });\n          });\n\n          it(\"should support formatters\", () => {\n            var formatters = MapWrapper.createFromPairs([\n              ['uppercase', (v) => v.toUpperCase()],\n              ['wrap', (v, before, after) => `${before}${v}${after}`]]);\n            expect(executeWatch('str', '\"aBc\" | uppercase', null, formatters)).toEqual(['str=ABC']);\n            expect(executeWatch('str', '\"b\" | wrap:\"a\":\"c\"', null, formatters)).toEqual(['str=abc']);\n          });\n\n          it(\"should support interpolation\", () => {\n            var parser = new Parser(new Lexer());\n            var pcd = createProtoChangeDetector();\n            var ast = parser.parseInterpolation(\"B{{a}}A\", \"location\");\n            pcd.addAst(ast, \"memo\", \"memo\", false);\n\n            var dispatcher = new TestDispatcher();\n            var cd = pcd.instantiate(dispatcher, MapWrapper.create());\n            cd.setContext(new TestData(\"value\"));\n\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([\"memo=BvalueA\"]);\n          });\n\n          describe(\"group changes\", () => {\n            it(\"should notify the dispatcher when a group of records changes\", () => {\n              var pcd = createProtoChangeDetector();\n              pcd.addAst(ast(\"1 + 2\"), \"memo\", \"1\");\n              pcd.addAst(ast(\"10 + 20\"), \"memo\", \"1\");\n              pcd.addAst(ast(\"100 + 200\"), \"memo2\", \"2\");\n\n              var dispatcher = new TestDispatcher();\n              var cd = pcd.instantiate(dispatcher, null);\n\n              cd.detectChanges();\n\n              expect(dispatcher.loggedValues).toEqual([[3, 30], [300]]);\n            });\n\n            it(\"should notify the dispatcher before switching to the next group\", () => {\n              var pcd = createProtoChangeDetector();\n              pcd.addAst(ast(\"a()\"), \"a\", \"1\");\n              pcd.addAst(ast(\"b()\"), \"b\", \"2\");\n              pcd.addAst(ast(\"c()\"), \"c\", \"2\");\n\n              var dispatcher = new TestDispatcher();\n              var cd = pcd.instantiate(dispatcher, null);\n\n              var tr = new TestRecord();\n              tr.a = () => {\n                dispatcher.logValue('InvokeA');\n                return 'a'\n              };\n              tr.b = () => {\n                dispatcher.logValue('InvokeB');\n                return 'b'\n              };\n              tr.c = () => {\n                dispatcher.logValue('InvokeC');\n                return 'c'\n              };\n              cd.setContext(tr);\n\n              cd.detectChanges();\n\n              expect(dispatcher.loggedValues).toEqual(['InvokeA', ['a'], 'InvokeB', 'InvokeC', ['b', 'c']]);\n            });\n          });\n\n          describe(\"enforce no new changes\", () => {\n            it(\"should throw when a record gets changed after it has been checked\", () => {\n              var pcd = createProtoChangeDetector();\n              pcd.addAst(ast(\"a\"), \"a\", 1);\n\n              var dispatcher = new TestDispatcher();\n              var cd = pcd.instantiate(dispatcher, null);\n              cd.setContext(new TestData('value'));\n\n              expect(() => {\n                cd.checkNoChanges();\n              }).toThrowError(new RegExp(\"Expression 'a in location' has changed after it was checked\"));\n            });\n          });\n\n          //TODO vsavkin: implement it\n          describe(\"error handling\", () => {\n            xit(\"should wrap exceptions into ChangeDetectionError\", () => {\n              var pcd = createProtoChangeDetector();\n              pcd.addAst(ast('invalidProp', 'someComponent'), \"a\", 1);\n\n              var cd = pcd.instantiate(new TestDispatcher(), null);\n              cd.setContext(null);\n\n              try {\n                cd.detectChanges();\n\n                throw new BaseException(\"fail\");\n              } catch (e) {\n                expect(e).toBeAnInstanceOf(ChangeDetectionError);\n                expect(e.location).toEqual(\"invalidProp in someComponent\");\n              }\n            });\n          });\n\n          describe(\"collections\", () => {\n            it(\"should not register a change when going from null to null\", () => {\n              var context = new TestData(null);\n\n              var c = createChangeDetector('a', 'a', context, null, true);\n              var cd = c[\"changeDetector\"];\n              var dispatcher = c[\"dispatcher\"];\n\n              cd.detectChanges();\n              expect(dispatcher.log).toEqual([]);\n            });\n\n            it(\"should register changes when switching from null to collection and back\", () => {\n              var context = new TestData(null);\n\n              var c = createChangeDetector('a', 'a', context, null, true);\n              var cd = c[\"changeDetector\"];\n              var dispatcher = c[\"dispatcher\"];\n\n              context.a = [0];\n              cd.detectChanges();\n\n              expect(dispatcher.log).toEqual([\"a=\" +\n              arrayChangesAsString({\n                collection: ['0[null->0]'],\n                additions: ['0[null->0]']\n              })\n              ]);\n              dispatcher.clear();\n\n              context.a = null;\n              cd.detectChanges();\n              expect(dispatcher.log).toEqual(['a=null']);\n            });\n\n            describe(\"list\", () => {\n              it(\"should support list changes\", () => {\n                var context = new TestData([1, 2]);\n\n                expect(executeWatch(\"a\", \"a\", context, null, true))\n                  .toEqual([\"a=\" +\n                  arrayChangesAsString({\n                    collection: ['1[null->0]', '2[null->1]'],\n                    additions: ['1[null->0]', '2[null->1]']\n                  })]);\n              });\n\n              it(\"should handle reference changes\", () => {\n                var context = new TestData([1, 2]);\n                var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n                var cd = objs[\"changeDetector\"];\n                var dispatcher = objs[\"dispatcher\"];\n                cd.detectChanges();\n                dispatcher.clear();\n\n                context.a = [2, 1];\n                cd.detectChanges();\n                expect(dispatcher.log).toEqual([\"a=\" +\n                arrayChangesAsString({\n                  collection: ['2[1->0]', '1[0->1]'],\n                  previous: ['1[0->1]', '2[1->0]'],\n                  moves: ['2[1->0]', '1[0->1]']\n                })]);\n              });\n            });\n\n            describe(\"map\", () => {\n              it(\"should support map changes\", () => {\n                var map = MapWrapper.create();\n                MapWrapper.set(map, \"foo\", \"bar\");\n                var context = new TestData(map);\n                expect(executeWatch(\"a\", \"a\", context, null, true))\n                  .toEqual([\"a=\" +\n                  kvChangesAsString({\n                    map: ['foo[null->bar]'],\n                    additions: ['foo[null->bar]']\n                  })]);\n              });\n\n              it(\"should handle reference changes\", () => {\n                var map = MapWrapper.create();\n                MapWrapper.set(map, \"foo\", \"bar\");\n                var context = new TestData(map);\n                var objs = createChangeDetector(\"a\", \"a\", context, null, true);\n                var cd = objs[\"changeDetector\"];\n                var dispatcher = objs[\"dispatcher\"];\n                cd.detectChanges();\n                dispatcher.clear();\n\n                context.a = MapWrapper.create();\n                MapWrapper.set(context.a, \"bar\", \"foo\");\n                cd.detectChanges();\n                expect(dispatcher.log).toEqual([\"a=\" +\n                kvChangesAsString({\n                  map: ['bar[null->foo]'],\n                  previous: ['foo[bar->null]'],\n                  additions: ['bar[null->foo]'],\n                  removals: ['foo[bar->null]']\n                })]);\n              });\n            });\n\n            if (!IS_DARTIUM) {\n              describe(\"js objects\", () => {\n                it(\"should support object changes\", () => {\n                  var map = {\"foo\": \"bar\"};\n                  var context = new TestData(map);\n                  expect(executeWatch(\"a\", \"a\", context, null, true))\n                    .toEqual([\"a=\" +\n                    kvChangesAsString({\n                      map: ['foo[null->bar]'],\n                      additions: ['foo[null->bar]']\n                    })]);\n                });\n              });\n            }\n          });\n\n          describe(\"ContextWithVariableBindings\", () => {\n            it('should read a field from ContextWithVariableBindings', () => {\n              var locals = new ContextWithVariableBindings(null,\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n              expect(executeWatch('key', 'key', locals))\n                .toEqual(['key=value']);\n            });\n\n            it('should handle nested ContextWithVariableBindings', () => {\n              var nested = new ContextWithVariableBindings(null,\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n              var locals = new ContextWithVariableBindings(nested, MapWrapper.create());\n\n              expect(executeWatch('key', 'key', locals))\n                .toEqual(['key=value']);\n            });\n\n            it(\"should fall back to a regular field read when ContextWithVariableBindings \" +\n            \"does not have the requested field\", () => {\n              var locals = new ContextWithVariableBindings(new Person(\"Jim\"),\n                MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n\n              expect(executeWatch('name', 'name', locals))\n                .toEqual(['name=Jim']);\n            });\n          });\n\n          describe(\"handle children\", () => {\n            var parent, child;\n\n            beforeEach(() => {\n              var protoParent = createProtoChangeDetector();\n              parent = protoParent.instantiate(null, null);\n\n              var protoChild = createProtoChangeDetector();\n              child = protoChild.instantiate(null, null);\n            });\n\n            it(\"should add children\", () => {\n              parent.addChild(child);\n\n              expect(parent.children.length).toEqual(1);\n              expect(parent.children[0]).toBe(child);\n            });\n\n            it(\"should remove children\", () => {\n              parent.addChild(child);\n              parent.removeChild(child);\n\n              expect(parent.children).toEqual([]);\n            });\n          });\n        });\n\n        describe(\"optimizations\", () => {\n          it(\"should not rerun formatters when args did not change\", () => {\n            var count = 0;\n            var formatters = MapWrapper.createFromPairs([\n              ['count', (v) => {count ++; \"value\"}]]);\n\n            var c = createChangeDetector('a', 'a | count', new TestData(null), formatters);\n            var cd = c[\"changeDetector\"];\n\n            cd.detectChanges();\n\n            expect(count).toEqual(1);\n\n            cd.detectChanges();\n\n            expect(count).toEqual(1);\n          });\n        });\n\n        describe(\"mode\", () => {\n          it(\"should not check a detached change detector\", () => {\n            var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.mode = DETACHED;\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([]);\n          });\n\n          it(\"should not check a checked change detector\", () => {\n            var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n            var cd = c[\"changeDetector\"];\n            var dispatcher = c[\"dispatcher\"];\n\n            cd.mode = CHECKED;\n            cd.detectChanges();\n\n            expect(dispatcher.log).toEqual([]);\n          });\n\n          it(\"should change CHECK_ONCE to CHECKED\", () => {\n            var cd = createProtoChangeDetector().instantiate(null, null);\n            cd.mode = CHECK_ONCE;\n\n            cd.detectChanges();\n\n            expect(cd.mode).toEqual(CHECKED);\n          });\n\n          it(\"should not change the CHECK_ALWAYS\", () => {\n            var cd = createProtoChangeDetector().instantiate(null, null);\n            cd.mode = CHECK_ALWAYS;\n\n            cd.detectChanges();\n\n            expect(cd.mode).toEqual(CHECK_ALWAYS);\n          });\n        });\n\n        describe(\"markPathToRootAsCheckOnce\", () => {\n          function changeDetector(mode, parent) {\n            var cd = createProtoChangeDetector().instantiate(null, null);\n            cd.mode = mode;\n            if (isPresent(parent)) parent.addChild(cd);\n            return cd;\n          }\n\n          it(\"should mark all checked detectors as CHECK_ONCE \" +\n            \"until reaching a detached one\", () => {\n\n            var root = changeDetector(CHECK_ALWAYS, null);\n            var disabled = changeDetector(DETACHED, root);\n            var parent = changeDetector(CHECKED, disabled);\n            var checkAlwaysChild = changeDetector(CHECK_ALWAYS, parent);\n            var checkOnceChild = changeDetector(CHECK_ONCE, checkAlwaysChild);\n            var checkedChild = changeDetector(CHECKED, checkOnceChild);\n\n            ChangeDetectionUtil.markPathToRootAsCheckOnce(checkedChild);\n\n            expect(root.mode).toEqual(CHECK_ALWAYS);\n            expect(disabled.mode).toEqual(DETACHED);\n            expect(parent.mode).toEqual(CHECK_ONCE);\n            expect(checkAlwaysChild.mode).toEqual(CHECK_ALWAYS);\n            expect(checkOnceChild.mode).toEqual(CHECK_ONCE);\n            expect(checkedChild.mode).toEqual(CHECK_ONCE);\n          });\n        });\n      });\n  });\n}\n\nclass TestRecord {\n  a;\n  b;\n  c;\n}\n\nclass Person {\n  name:string;\n  age:number;\n  address:Address;\n  constructor(name:string, address:Address = null) {\n    this.name = name;\n    this.address = address;\n  }\n\n  sayHi(m) {\n    return `Hi, ${m}`;\n  }\n\n  toString():string {\n    var address = this.address == null ? '' : ' address=' + this.address.toString();\n\n    return 'name=' + this.name + address;\n  }\n}\n\nclass Address {\n  city:string;\n  constructor(city:string) {\n    this.city = city;\n  }\n\n  toString():string {\n    return this.city;\n  }\n}\n\nclass Uninitialized {\n  value:any;\n}\n\nclass TestData {\n  a;\n\n  constructor(a) {\n    this.a = a;\n  }\n}\n\nclass TestDispatcher extends ChangeDispatcher {\n  log:List;\n  loggedValues:List;\n  onChange:Function;\n\n  constructor() {\n    super();\n    this.log = null;\n    this.loggedValues = null;\n    this.onChange = (_, __) => {};\n    this.clear();\n  }\n\n  clear() {\n    this.log = ListWrapper.create();\n    this.loggedValues = ListWrapper.create();\n  }\n\n  logValue(value) {\n    ListWrapper.push(this.loggedValues, value);\n  }\n\n  onRecordChange(group, updates:List) {\n    var value = updates[0].change.currentValue;\n    var memento = updates[0].bindingMemento;\n    ListWrapper.push(this.log, memento + '=' + this._asString(value));\n\n    var values = ListWrapper.map(updates, (r) => r.change.currentValue);\n    ListWrapper.push(this.loggedValues, values);\n\n    this.onChange(group, updates);\n  }\n\n\n  _asString(value) {\n    return (isBlank(value) ? 'null' : value.toString());\n  }\n}\n","assert.argumentTypes($__placeholder__0)","assert.type.$__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","assert.type.any","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","return assert.returnType(($__placeholder__0), $__placeholder__1)","function($__super) {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4, $__super);\n        }($__placeholder__5)","$traceurRuntime.superConstructor($__placeholder__0).call($__placeholder__1)"]}