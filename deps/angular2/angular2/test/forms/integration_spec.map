{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","integration_spec.js","@traceur/generated/TemplateParser/167","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/31","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"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","file":"/Users/patrick/Documents/open source/angular/modules/angular2/test/forms/integration_spec.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/angular2/test/forms/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach,\n  el, queryView, dispatchEvent} from 'angular2/test_lib';\n\nimport {Lexer, Parser, ChangeDetector, dynamicChangeDetection} from 'angular2/change_detection';\nimport {Compiler, CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {NativeShadowDomStrategy} from 'angular2/src/core/compiler/shadow_dom_strategy';\nimport {Injector} from 'angular2/di';\nimport {DOM} from 'angular2/src/facade/dom';\n\nimport {Component, TemplateConfig} from 'angular2/core';\nimport {ControlDirective, ControlNameDirective, ControlGroupDirective, NewControlGroupDirective,\n  Control, ControlGroup} from 'angular2/forms';\n\nimport {TemplateLoader} from 'angular2/src/core/compiler/template_loader';\nimport {XHRMock} from 'angular2/src/mock/xhr_mock';\n\nexport function main() {\n  function detectChanges(view) {\n    view.changeDetector.detectChanges();\n  }\n\n  function compile(componentType, template, context, callback) {\n    var compiler = new Compiler(dynamicChangeDetection,\n      new TemplateLoader(new XHRMock()),\n      new DirectiveMetadataReader(),\n      new Parser(new Lexer()),\n      new CompilerCache(),\n      new NativeShadowDomStrategy());\n\n    compiler.compile(componentType, el(template)).then((pv) => {\n      var view = pv.instantiate(null);\n      view.hydrate(new Injector([]), null, context);\n      detectChanges(view);\n      callback(view);\n    });\n  }\n\n  function formComponent(view) {\n    // TODO: vsavkin remove when view variables work\n    return view.elementInjectors[0].getComponent();\n  }\n\n  describe(\"integration tests\", () => {\n    it(\"should initialize DOM elements with the given form object\", (done) => {\n      var ctx = new MyComp(new ControlGroup({\n        \"login\": new Control(\"loginValue\")\n      }));\n\n      var t = `<div [control-group]=\"form\">\n                <input [control-name]=\"'login'\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"loginValue\");\n        done();\n      });\n    });\n\n    it(\"should update the control group values on DOM change\", (done) => {\n      var form = new ControlGroup({\n        \"login\": new Control(\"oldValue\")\n      });\n      var ctx = new MyComp(form);\n\n      var t = `<div [control-group]=\"form\">\n                <input [control-name]=\"'login'\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n\n        input.value = \"updatedValue\";\n        dispatchEvent(input, \"change\");\n\n        expect(form.value).toEqual({\"login\": \"updatedValue\"});\n        done();\n      });\n    });\n\n    it(\"should update DOM elements when rebinding the control group\", (done) => {\n      var form = new ControlGroup({\n        \"login\": new Control(\"oldValue\")\n      });\n      var ctx = new MyComp(form);\n\n      var t = `<div [control-group]=\"form\">\n                <input [control-name]=\"'login'\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        ctx.form = new ControlGroup({\n          \"login\": new Control(\"newValue\")\n        });\n        detectChanges(view);\n\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"newValue\");\n        done();\n      });\n    });\n\n    it(\"should update DOM element when rebinding the control name\", (done) => {\n      var ctx = new MyComp(new ControlGroup({\n        \"one\": new Control(\"one\"),\n        \"two\": new Control(\"two\")\n      }), \"one\");\n\n      var t = `<div [control-group]=\"form\">\n                <input [control-name]=\"name\">\n              </div>`;\n\n      compile(MyComp, t, ctx, (view) => {\n        var input = queryView(view, \"input\")\n        expect(input.value).toEqual(\"one\");\n\n        ctx.name = \"two\";\n        detectChanges(view);\n\n        expect(input.value).toEqual(\"two\");\n        done();\n      });\n    });\n\n    describe(\"declarative forms\", () => {\n      it(\"should initialize dom elements\", (done) => {\n        var t = `<div [new-control-group]=\"{'login': 'loginValue', 'password':'passValue'}\">\n                  <input id=\"login\" [control]=\"'login'\">\n                  <input id=\"password\" [control]=\"'password'\">\n                </div>`;\n\n        compile(MyComp, t, new MyComp(), (view) => {\n          var loginInput = queryView(view, \"#login\")\n          expect(loginInput.value).toEqual(\"loginValue\");\n\n          var passInput = queryView(view, \"#password\")\n          expect(passInput.value).toEqual(\"passValue\");\n\n          done();\n        });\n      });\n\n      it(\"should update the control group values on DOM change\", (done) => {\n        var t = `<div [new-control-group]=\"{'login': 'loginValue'}\">\n                  <input [control]=\"'login'\">\n                </div>`;\n\n        compile(MyComp, t, new MyComp(), (view) => {\n          var input = queryView(view, \"input\")\n\n          input.value = \"updatedValue\";\n          dispatchEvent(input, \"change\");\n\n          expect(formComponent(view).value).toEqual({'login': 'updatedValue'});\n          done();\n        });\n      });\n\n    });\n  });\n}\n\n@Component({\n  selector: \"my-comp\",\n  template: new TemplateConfig({\n    inline: \"\",\n    directives: [ControlGroupDirective, ControlNameDirective,\n      ControlDirective, NewControlGroupDirective]\n  })\n})\nclass MyComp {\n  form:ControlGroup;\n  name:string;\n\n  constructor(form = null, name = null) {\n    this.form = form;\n    this.name = name;\n  }\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}