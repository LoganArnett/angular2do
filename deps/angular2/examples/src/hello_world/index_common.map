{"version":3,"sources":["@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/5","index_common.js","@traceur/generated/TemplateParser/167","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/31","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,2FAAuC,UAAS,SAAQ;;ACAvE,AAAI,IAAA,CAAA,YAAW,0CAAoB,CAAC;;;;;;;;;;AC8D7B,SAAS,KAAG,CAAE,AAAD,CAAG;AAQrB,YAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;EACrB;AAAA,ACtEQ,UAAQ,AAAC,cAAqC,CAAA;ACDtD,OAAO;AACD,UAAM,GCDZ,SAAS,IAAG,CAAG;ACAf,aAAoB,KAAG,OAAkB,CAAC;IDElC,CAFR,UAAS,IAAG;ACAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IDElC,CDDuB;AACzB,UAAM;AGFZ,iBCAA,SAAS,AAAD;AACE,AAAI,UAAA,WN8Bd,SAAM,SAAO,CAEC,OAAM,AAAiB,CAAG;AOjCxC,eAAK,cAAc,SPiCI,gBAAc,COjCC,CAAA;APkClC,aAAG,SAAS,EAAI,CAAA,OAAM,SAAS,CAAC;QAClC,AMlCgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,YNkC5C,cAAa,CAAb,UAAe,AAAD,CAAG;AACf,eAAG,SAAS,EAAI,QAAM,CAAC;UACzB,MMnC8D,CAAC;MACzD,AAAC,EAAC,CDJ0B,CAAA;AGApC,WAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,oBRSzB,UAAQ,AAAC,CAAC;AAIT,mBAAO,CAAG,YAAU;AAGpB,4BAAgB,CAAG,EAAC,eAAc,CAAC;AACnC,mBAAO,CAAG,IAAI,eAAa,AAAC,CAAC;AAI3B,mBAAK,CAAG,wKACiF;AAKzF,uBAAS,CAAG,EAAC,MAAK,CAAC;AAAA,YACrB,CAAC;AAAA,UACH,CAAC,EQ7BgD;QAAC,CAAC,CAAC,CAAC;AADrD,WAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,kBRgCH,eAAc,GQhCY;QAAC,CAAC,CAAC,CAAC;AHDrD,eCAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,SN6Cd,SAAM,OAAK,CAGG,EAAC,AAAW,CAAG;AOjD7B,eAAK,cAAc,IPiDD,UAAQ,COjDY,CAAA;APkDlC,WAAC,WAAW,MAAM,MAAM,EAAI,MAAI,CAAC;QACnC,AMlDgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,gBACkB,CAAC;MACzD,AAAC,EAAC,CDJ0B,CAAA;AGApC,WAAK,eAAe,AAAC,uBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,oBR0CzB,UAAQ,AAAC,CAAC,CACT,QAAO,CAAG,QAAM,CAClB,CAAC,EQ5CgD;QAAC,CAAC,CAAC,CAAC;AADrD,WAAK,eAAe,AAAC,sBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,kBRgDR,SAAQ,GQhDuB;QAAC,CAAC,CAAC,CAAC;AHDrD,wBCAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,kBNsDd,SAAM,gBAAc,CAEN,AAAD,CAAG;AACZ,aAAG,SAAS,EAAI,QAAM,CAAC;QACzB,AM1DgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,yBACkB,CAAC;MACzD,AAAC,EAAC,CDJ0B,CAAA;IHEL;EAC3B,CAAA;AJDI,CAAC,CAAC;AEsEV","file":"/Users/patrick/Documents/open source/angular/modules/examples/src/hello_world/index_common.js","sourceRoot":"/Users/patrick/Documents/open source/angular/modules/examples/src/hello_world/","sourcesContent":["System.register($__placeholder__0, $__placeholder__1, function($__export) {\n          $__placeholder__2\n        });","var __moduleName = $__placeholder__0;","import {bootstrap, Component, Decorator, TemplateConfig, NgElement} from 'angular2/angular2';\n\n// Angular 2.0 supports 3 basic types of directives:\n// - Component - the basic building blocks of Angular 2.0 apps. Backed by\n//   ShadowDom.(http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/)\n// - Decorator - add behavior to existing elements.\n// - Template - allow for stamping out of a html template (not in this demo).\n\n// @Component is AtScript syntax to annotate the HelloCmp class as an Angular\n// 2.0 component.\n@Component({\n  // The Selector prop tells Angular on which elements to instantiate this\n  // class. The syntax supported is a basic subset of CSS selectors, for example\n  // 'element', '[attr]', [attr=foo]', etc.\n  selector: 'hello-app',\n  // These are services that would be created if a class in the component's\n  // template tries to inject them.\n  componentServices: [GreetingService],\n  template: new TemplateConfig({\n    // The template for the component.\n    // Expressions in the template (like {{greeting}}) are evaluated in the\n    // context of the HelloCmp class below.\n    inline: `<div class=\"greeting\">{{greeting}} <span red>world</span>!</div>\n             <button class=\"changeButton\" (click)=\"changeGreeting()\">change greeting</button>`,\n    // All directives used in the template need to be specified. This allows for\n    // modularity (RedDec can only be used in this template)\n    // and better tooling (the template can be invalidated if the attribute is\n    // misspelled).\n    directives: [RedDec]\n  })\n})\nclass HelloCmp {\n  greeting: string;\n  constructor(service: GreetingService) {\n    this.greeting = service.greeting;\n  }\n  changeGreeting() {\n    this.greeting = 'howdy';\n  }\n}\n\n// Decorators are light-weight. They don't allow for templates, or new\n// expression contexts (use @Component or @Template for those needs).\n@Decorator({\n  selector: '[red]'\n})\nclass RedDec {\n  // NgElement is always injectable and it wraps the element on which the\n  // directive was found by the compiler.\n  constructor(el: NgElement) {\n    el.domElement.style.color = 'red';\n  }\n}\n\n// A service used by the HelloCmp component.\nclass GreetingService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nexport function main() {\n  // Bootstrapping only requires specifying a root component.\n  // The boundary between the Angular application and the rest of the page is\n  // the shadowDom of this root component.\n  // The selector of the component passed in is used to find where to insert the\n  // application.\n  // You can use the light dom of the <hello-app> tag as temporary content (for\n  // example 'Loading...') before the application is ready.\n  bootstrap(HelloCmp);\n}\n","\n        $__export($__placeholder__0, $__placeholder__1)\n      ","return {\n      setters: $__placeholder__0,\n      execute: $__placeholder__1\n    }","function($__m) {\n          $__placeholder__0\n        }","$__placeholder__0 = $__m.$__placeholder__1;","$__placeholder__0 = $__placeholder__1","function() {\n          var $__placeholder__0 = $__placeholder__1;\n          return ($traceurRuntime.createClass)($__placeholder__2, $__placeholder__3,\n                                               $__placeholder__4);\n        }()","assert.argumentTypes($__placeholder__0)","Object.defineProperty($__placeholder__0, $__placeholder__1,\n        {get: function() {return $__placeholder__2}});"]}